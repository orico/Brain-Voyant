using System;
using System.Linq;
using System.Collections.Generic;
using System.Windows.Forms;
using MathWorks.MATLAB.NET.Arrays;

namespace OriBrainLearnerCore
{
    public class PlotManager
    {
        //plot using c# dicom visual plotter
        public static void plotBrainDicomViewer()
        {

            if (Preferences.Instance.ProblemOriginal != null && Preferences.Instance.ProblemOriginal.samples != null)
            {
                if (Preferences.Instance.attsel == null)
                {
                    GuiPreferences.Instance.setLog("there are no ranked IG attributes or selected attr, continuing but please fix this possible bug.");
                }

                //todo: this is a hack of displaying the first dicom available in the master directory. this should be generalized later on
                string dicomDir = GuiPreferences.Instance.WorkDirectory;
                dicomDir = dicomDir.Substring(0, dicomDir.Length - 4) + @"master\";
                string[] files = System.IO.Directory.GetFiles(dicomDir, "*.dcm");
                string firstFile = files[0].Substring(files[0].LastIndexOf(@"\") + 1);

                bool thresholdOrVoxelAmount;
                if (GuiPreferences.Instance.IgSelectionType == IGType.Threshold)
                {
                    thresholdOrVoxelAmount = true;
                }
                else
                {
                    thresholdOrVoxelAmount = false;
                }
                Form plotForm = new DicomImageViewer.MainForm(dicomDir + firstFile, firstFile, Preferences.Instance.attsel.rankedAttributes(), Convert.ToDouble(GuiPreferences.Instance.NudIGThreshold),
                    Convert.ToInt32(GuiPreferences.Instance.NudIGVoxelAmount),  thresholdOrVoxelAmount);
                plotForm.StartPosition = FormStartPosition.CenterParent;
                plotForm.ShowDialog();
                plotForm.Close();
            }
            else
            {
                GuiPreferences.Instance.setLog("Plot Failed: no problem");
            }

        }

        //plot using matlab's visual plotter
        public static void plotBrainMatlab()
        {
            if (Preferences.Instance.ProblemOriginal != null && Preferences.Instance.ProblemOriginal.samples != null)
            {
                //get maximum size of the first dictionary inside the array
                int maxIndexDictionary = Preferences.Instance.dim_x * Preferences.Instance.dim_y * Preferences.Instance.dim_z;
                SortedDictionary<int, double> d = Preferences.Instance.ProblemOriginal.samples[0];
                //int [] ar = new int[] { /* unique in 4.3 and 5.6 (although not correct since slices not in right order and may not overlap 100% in those two sessions) */4126, 37170, 37406, 43806, 43966, 44048, 50115, 54996, 55077, 55085, 55166, 74843, 80617, 94848, 94927, 112587, 118986, 118987, 118988, 138186, 144140, 144220, 144510, 144589, 144670, 144701, 144781, 145255, 150344, 150345, 150424, 150459, 150539, 150540, 150620, 150679, 150700, 150759, 150764, 150765, 150839, 150840, 150920, 150988, 150989, 150990, 151096, 151172, 151173, 151252, 151253, 151306, 151307, 151308, 151312, 151332, 151387, 151737, 156919, 156999, 157000, 157080, 157164, 157244, 157319, 157323, 157388, 157390, 157469, 157470, 157471, 157492, 157493, 157550, 157551, 157552, 157630, 157631, 157632, 157652, 157653, 157707, 157708, 157710, 157711, 157712, 157731, 157785, 157786, 157787, 157788, 157791, 157792, 157793, 157803, 157866, 157963, 157975, 158057, 158137, 163401, 163481, 163713, 163714, 163793, 163803, 163870, 163883, 163950, 163951, 163973, 164030, 164031, 164043, 164052, 164053, 164054, 164105, 164106, 164110, 164111, 164116, 164122, 164123, 164124, 164132, 164186, 164191, 164192, 164202, 164203, 164282, 164283, 164296, 164362, 164363, 164375, 164443, 164512, 164592, 164605, 169721, 169801, 169881, 169963, 169964, 170112, 170113, 170188, 170190, 170192, 170193, 170201, 170203, 170204, 170269, 170270, 170273, 170281, 170293, 170294, 170348, 170349, 170350, 170361, 170362, 170372, 170373, 170374, 170429, 170430, 170431, 170442, 170443, 170456, 170510, 170511, 170515, 170523, 170524, 170536, 170603, 170616, 171005, 171007, 171011, 171085, 171086, 176363, 176432, 176454, 176509, 176510, 176511, 176512, 176521, 176534, 176535, 176589, 176590, 176591, 176592, 176601, 176602, 176604, 176669, 176671, 176672, 176681, 176682, 176683, 176684, 176693, 176694, 176749, 176750, 176761, 176762, 176772, 176773, 176829, 176830, 176841, 176842, 176843, 176849, 176852, 176853, 176910, 176921, 176922, 176923, 176925, 176926, 176932, 176933, 176991, 177005, 177071, 177164, 177165, 177168, 177405, 177475, 177485, 177487, 182911, 182921, 182991, 182992, 182996, 183001, 183002, 183004, 183071, 183072, 183076, 183078, 183079, 183151, 183162, 183172, 183252, 183325, 183331, 183332, 183402, 183411, 183412, 183413, 183798, 189475, 189476, 189478, 189479, 189484, 189485, 189558, 189559, 189564, 189568, 189635, 189636, 189648, 189649, 189715, 189716, 189717, 189725, 189796, 189797, 189798, 189799, 189805, 189806, 189807, 189878, 189888, 189889, 195885, 195958, 195959, 195965, 195966, 196037, 196046, 196117, 196118, 196119, 196197, 196198, 196199, 196279};
                //int[] ar = new int[]  { /* pred 4.3 */ 157787, 163950, 170523, 189968, 170349, 75797, 176843, 183001, 176924, 157711, 157712,196367, 157792, 183083, 176601, 164030, 157630, 183796, 151252, 183084, 69397, 144781, 196045, 157576, 69477, 157550, 170430, 157788, 170193, 158137, 69476, 176511, 176842,176680, 196206, 176681, 183158, 43967, 176923, 157575, 157867, 157786, 170453, 183071,157891, 157243, 163951, 157631, 176921, 170510, 195965, 69396, 183159, 156999, 176830,170524, 144701, 196279, 195958, 170516, 157079, 163973, 176672, 69718, 157495, 183405,176761, 196287, 189796, 170112, 183078, 170192, 144590, 182991, 157866, 183072, 171085,157160, 176915, 157164, 176592, 183079, 176925, 170522, 183230, 189644, 177485, 177170,170201, 163319, 183795, 195964, 183081, 183151, 170591, 177167, 164053, 183332, 156939,176684, 151312, 170113, 150759, 157080, 157389, 196199, 196119, 170280, 183490, 54996,150839, 196036, 170281, 183412, 196046, 157632, 189805, 164288, 183173, 170517, 176443,189965, 177486, 176614, 177168, 170269, 176589, 183252, 170452, 183152, 183570, 163793,176933, 176591, 164186, 158217, 183398, 151172, 177001, 170293, 196126, 183172, 156843,183082, 157551, 164191, 183244, 183566, 189477, 176841, 157244, 189797, 189564, 183092,171005, 196359, 151387, 177487, 82357, 176534, 170443, 170845, 176829, 176693, 182992,145335, 170681, 182921, 189717, 171086, 170294, 196118, 157388, 170454, 75877, 176917,82358, 177005, 163551, 170442, 157785, 176600, 157879, 189484, 177405, 69719, 170435,176932, 101406, 170511, 170603, 183411, 196044, 95006, 157793, 196358, 189478, 170766,183716, 164292, 101407, 150459, 164031, 189716, 164124, 177169, 189879, 170690, 158528,157254, 158138, 177013, 170456, 151891, 183568, 170350, 146038, 144220, 189475, 164282,164362, 144140, 151332, 183325, 170441, 144860, 196198, 69398, 170765, 158057, 169963,176910, 157469, 150989, 48688, 157572, 196037, 150344, 195884, 164266, 157471, 183564,157337, 183093, 169801, 56925, 157253, 170515, 157336, 189558, 158527, 195959, 164185,176922, 44048, 75796, 163320, 176509, 163483, 176844, 157163, 156763, 189643, 163564,189888, 164283, 157815, 189798, 157159, 176916, 170361, 190049, 190048, 170597, 133408,150840, 189648, 189649, 189885, 183646, 183076, 170590, 158218, 170616, 196117, 183797,157494, 150620, 164512, 176749, 177087, 75798, 69556, 176510, 177090, 157019, 177004,164123, 95007, 164111, 176853, 170373, 157629, 157708, 177399, 189799, 94927, 144589,183876, 164605, 157791, 170768, 176683, 189563, 150678, 177171, 164520, 94848, 189966,156938, 183399, 152206, 157964, 82277, 183648, 133315, 176512, 151388, 170273, 189961,176773, 183077, 56355, 183150, 176363, 183243, 170602, 164132, 144780, 189715, 74762,170521, 183413, 170923, 101486, 55085, 176682, 150854, 42192, 157803, 176694, 132532,171000, 170999, 183005, 164363, 144774, 163892, 149230, 176909, 150853, 150685, 176762,183798, 170767, 164434, 157020, 177253, 170769, 183402, 176669, 189890, 183397, 69635,120058, 158297, 118831, 170762, 82278, 183489, 196360, 136924, 157320, 177003, 196278,151308, 55077, 183242, 144510, 177407, 170190, 183248, 170050, 176918, 163883, 43639,55877, 157707, 132452, 163962, 183718, 158055, 101408, 164043, 157492, 150764, 157319,164204, 164523, 82438, 69478, 163803, 183008, 157963, 118987, 68125, 151253, 176998,37170, 157724, 170506, 169881, 177159, 170429, 93245, 183482, 50444, 164287, 157387,183565, 177476, 183316, 43806, 176774, 69639, 105872, 164361, 69475, 189725, 183493,156859, 69399, 170604, 170509, 183805, 151890, 144693, 183569, 164839, 157895, 164297,164296, 177404, 177164, 144504, 75876, 189811, 176852, 183492, 177398, 170533, 196197,69645, 183571, 176679, 189967, 157710, 183002, 151307, 157398, 170204, 176760, 150700,144773, 144141, 189724, 44044, 152128, 107885, 183317, 177079, 170536, 183163, 163713,157390, 124584, 145890, 150852, 157496, 152127, 157470, 104373, 150983, 196286, 157889,163731, 169883, 183070, 157000, 183331, 183634, 75878, 157960, 189476, 43886, 170362,56839, 163651, 183567, 189559, 183410, 156919, 202447, 164122, 44047, 177396, 144621,189889, 157804, 150679, 158607, 55659, 163481, 195966, 164525, 43559, 164265, 157892,177160, 69634, 176828, 164606, 176914, 151063, 171166, 164692, 150990, 157255, 37406,43968, 49324, 189635, 105873, 146044, 157731, 164281, 50115, 176604, 196368, 176835,170426, 183555, 107886, 170598, 157240, 170369, 158606, 157323, 164375, 95087, 189568,152438, 183322, 150919, 170374, 125464, 163794, 56691, 43807, 183324, 163401, 169641,171087, 144591, 170535, 164604, 144430, 183479, 144585, 177081, 105792, 183169, 177406,144670, 183253, 189887, 158033, 189806, 151411, 56128, 182911, 189728, 150920, 157018,150758, 177319, 157552, 118988, 56288, 118751, 150424, 164041, 183004, 125580, 54928,151069, 182521, 189488, 157549, 170431, 49879, 94425, 56208, 164054, 131865, 169964,183250, 145969, 151737, 176453, 54767, 42775, 157232, 151173, 170203, 105812, 195885,150765, 144221, 177165, 158373, 170682, 164042, 169721, 69557, 163870, 163399, 176750,163896, 202446, 144694, 170425, 43966, 151735, 196127, 188605, 3806, 182997, 151406,170693, 177408, 183333, 170770, 150363, 119068, 183161, 169962, 164201, 177166, 170601,182996, 183321, 163650, 157256, 189964, 176991, 81972, 150201, 176454, 150763, 104616,157975, 189401, 157231, 146118, 163972, 157005, 164052, 151491, 158512, 157954, 189408,146120, 170689, 164838, 183089, 189959, 94928, 164203, 163730, 177475, 43795, 132701,157497, 43638, 138777, 196125, 81787, 176854, 50524, 170596, 176926, 143863, 163631,183075, 169882, 43554, 170532, 55237, 157468, 66834, 54916, 164689, 177088, 183090,82524, 152126, 145970, 157816, 176521, 176590, 163403, 119901, 151306, 55158, 151171,158056, 152369, 189969, 170763, 151181, 94349, 119067, 164443, 150933, 164212, 157652,176442, 158296, 163004, 183401, 189958, 170188, 81977, 176772, 150540, 164373, 164110,196366, 171089, 74843, 145157, 176535, 151557, 37168, 82605, 189479, 164121, 150908,183014, 151318, 144908, 183491, 157953, 157653, 176849, 144586, 196207, 163714, 91652,171248, 177397, 10359, 171007, 151398, 119307, 82441, 190047, 131782, 163563, 80617,55157, 150539, 164346, 189807, 150772, 139568, 170687, 144695, 150855, 157723, 101328,56924, 120766, 170284, 183085, 157868, 157239, 183645, 176759, 81952, 183162, 29978,170756, 151810, 157811, 183886, 202527, 93238, 112697, 189636, 176855, 164116, 132533,170348, 48687, 164133, 189881, 131015, 176671, 43884, 171011, 196116, 61564, 69555,43553, 43162, 171008, 37169, 56683, 177002, 79225, 105971, 189884, 158529, 55076, 55876,55804, 61565, 86928, 4126, 80699, 176444, 176608, 161965, 177071, 164106, 189392, 157306, 151096, 132621, 171004, 177072, 87017, 69809, 158355, 156825, 170764, 82366, 176602,151084, 182852, 164192, 183241, 54847, 54995, 176432, 48595, 170688, 95157, 63238, 99412, 177565, 171240, 189970, 56769, 54836, 118986, 189485, 164686, 61477, 145713, 157952,150845, 157399, 48608, 145414, 112587, 176934, 55493, 164131, 125389, 57008, 150504,157721, 183249, 144702, 158689, 145311, 93258, 56354, 170455, 152207, 157100, 56684,104939, 177328, 157946, 176613, 170998, 164202, 164271, 157338, 144605, 94607, 163963,164190, 150345, 80697, 170270, 10127, 43885, 183310, 145889, 150988, 126995, 196048,164105, 150748, 55308, 163978, 43730, 124504, 80778, 170842, 189878, 182989, 171091,30850, 55166, 163565, 170534, 157493, 164058, 48118, 55171, 145415, 157400, 56770, 82518, 183647, 171090, 68999, 98830, 164440, 170372, 16290, 152290, 164433, 131943, 74680,132534, 152129, 150203, 80102, 170449, 145395, 145255, 42292, 171239, 157880, 82270,164279, 56760, 189891, 164592, 56134, 183239, 151095, 164347, 138186, 56763, 56677,50357, 61801, 158213, 164432, 61882, 48766, 162043, 164513, 55796, 69474, 176913, 91733,120767, 163955, 177174, 42034, 93325};
                //int[] ar = new int[]{/* pred 5.6*/ 163870,170188,170269,170187,163973,157551,163950,176750,189637,189717,176670,170189,157712,150679,176671,157550,151232,157706,170270,163713,170032,163869,182991,176842,164054,157707,157470,151152,176510,157786,157471,157631,151151,189484,176749,176509,182992,151071,176830,164030,163401,164031,170214,163893,189888,170373,156920,176521,196118,182911,189635,189555,182912,151150,176591,170350,164111,151307,151308,157573,163790,164053,157711,176589,176751,170430,164025,170349,170536,150759,157653,170294,170192,176601,170442,196038,164026,176511,170112,195885,157630,157544,176374,170537,151231,164105,170268,164106,164110,176669,176430,170108,196039,151070,163974,176762,157785,151312,170515,176429,196198,176602,151172,157787,150599,157705,157632,189558,163803,195879,157652,157391,176431,189556,195877,157788,176672,170372,171006,170267,157161,189565,164191,170456,144664,151253,138024,195957,144060,163813,157803,189808,164282,138025,176684,170272,157866,163633,183072,94024,157552,170443,157081,176592,183071,163866,163946,151252,150764,176831,176590,164203,131063,189568,170293,163785,176681,163951,170431,195959,112506,171086,157792,163945,189716,138381,150839,195958,170507,176604,164202,151092,170511,176910,170109,189806,30846,170107,176849,157708,170282,150991,164052,196199,195876,150984,170695,176911,150540,182913,169964,176294,163788,131101,170457,163868,150620,164188,150990,164043,177005,196037,176454,138186,164268,189636,48515,119069,170193,144220,164124,176991,195967,183078,163793,144140,176926,150904,150840,164362,183313,164518,150539,157882,171085,157000,118989,157390,137464,189475,176925,176682,151306,170281,176683,176929,176534,196119,195796,176992,170213,164029,112587,169884,189559,170510,157469,150905,189799,137741,150988,164187,189798,150844,189796,177165,163481,183403,195956,169801,176596,177318,163871,164123,137740,164136,150680,151387,196279,196197,170031,164512,150920,176921,164295,151313,183484,144424,183402,189797,151227,176605,189805,176990,176829,176761,170433,177085,163322,183151,150459,176769,177164,164137,170190,163882,131181,189646,164216,118591,157896,176535,164267,183483,138104,164375,151331,183002,42608,170434,54997,143980,170362,164108,144061,195965,151332,150989,171005,182921,176522,143979,118986,164456,164217,176763,150424,69730,171007,176772,164283,183011,151554,170113,176363,182993,189404,164192,163801,56757,189645,163789,176432,195966,183412,176841,112350,164186,44048,150619,156919,150425,176693,183252,151415,144584,150760,170204,170427,157791,149654,150600,182999,183012,68281,177084,195886,156840,164671,164116,164672,151228,170376,150987,170523,163639,164374,189719,189478,189889,157817,177071,171076,144701,157080,137463,170203,164455,164036,163865,158057,3970,169721,176685,144671,163787,170033,189485,170201,131064,171011,189718,176455,164376,189557,81978,49169,42527,144503,118221,170271,164685,4126,164673,163883,170616,151305,150700,183001,183798,157467,164115,170361,118909,42609,176678,164447,164363,195878,163791,189638,189726,94848,183325,164443,164035,189313,183413,164377,137820,130983,176932,170615,189554,176508,183232,144587,171012,163881,189639,176595,163714,158109,196117,176676,176922,151233,170347,183635,119096,163400,157001,170351,157164,189564,164768,131819,183245,55077,144423,112505,176773,189331,9800,183153,189648,157165,157976,176373,138141,151656,150602,182513,163561,157963,151657,182996,170111,151420,170029,152356,164122,163321,157975,107808,157083,111875,183331,182994,170524,196046,118299,189314,177082,164847,157492,42607,163804,157319,144858,176848,189807,163949,163723,145232,177405,164132,164592,3728,49087,170374,183076,86274,43806,37405,158137,145255,125101,170444,157064,183332,169963,182918,176852,189394,171075,151970,176512,189320,183004,189795,163706,157802,157085,163802,170200,164034,144583,82038,99491,183799,157545,144670,118682,151386,176349,157084,151737,189476,145231,164767,151888,49089,138026,150460,170684,164605,189405,182832,42049,163560,144698,112846,157260,105403,94927,176694,86195,176364,10366,138301,55166,163884,164109,176850,88210,183079,158845,150345,157483,158371,42516,48917,138140,144589,112507,30766,151334,49006,176933,61817,183312,183162,138841,105870,138912,9799,163786,164296,183485,37171,177485,3887,177487,50115,81010,119227,150519,145008,68202,98669,150684,54996,48840,16119,151173,157883,118988,157493,157713,176375,37406,176441,183073,171088,150426,137544,49086,157710,105891,10131,125069,150765,145256,162437,137944,157323,170110,138773,138220,176843,176923,118681,37486,157414,144939,123316,183411,158190,55885,48447,68828,73874,189400,170429,55556,68748,176593,112828,55159,151490,157580,170603,125329,10291,156999,163867,164112,54998,157224,118906,112426,42689,150779,55078,150344,164679,119712,30350,182929,42596,169881,157234,189878,74842,144781,112463,189566,170919,17402,157412,157484,163632,163712,132220,157793,163641,125316,37170,3717,176930,144059,61640,61718,144510,169561,177168,117864,4528,162988,43966,176351,170588,80930,144284,143723,170348,87257,164027,55327,113472,137816,80275,157731,61720,67877,189479,157800,3486,195887,74843,151309,163798,100107,177478,68201,157388,183172,183091,55085,176853,106107,87631,106748,170273,163735,100297,118987,151096,176851,176845,137646,163707,138189,132054,136129,144508,55165,189649,182831,117956,35570,79549,131091,105495,151250,105170,158534,163158,68056,118905,107728,138272,119559,48516,189725,158108,54917,61643,170027,101327,63397,189634,131262,67323,158275,182113,169393,189715,137788,145646,56290,170432,144525,177475,98924,36836,132287,56675,117949,93237,50196,87639,67416,162517,17008,138371,62996,143329,170696,78842,176597,69236,111866,60612,118300,164756,29963,67465,138921,54192,81169,163167,150527,124515,129638,157013,150848,49876,137738,145228,144349,43246,149731,189318,94530,111790,158136,164674,130768,104346,42212,75229,106913,143812,61719,176768,104369,80617,132289,94347,169958,62360,62453,110695,124742,17154,23176,35079,124700,164757,126288,68541,101250,66427,176041,138847,36287,151715,93652,144700,74749,170121,94052,110767,116511,60675,88430,105332,138919,163718,55494,144432,176837,120606,49968,17092,87969,106447,74274,62210,117649,36132,81712,176367,50195,119340,133159,150859,133156,87478,157244,145177,150601,49007,73872,91817,68998,169638,131071,124665,67388,67419,67417,69183,67420,67389,67354,67402,67385,67384,67383,67401,67418,67386,67387,67395,67398,67394,67351,67368,67349,67348,67396,67350,67397,67352,67400,67366,67353,67390,67367,67399,67391,67393,67392,67371,67414,67407,67372,67359,67377,67370,67375,67362,67376,67408,67373,67374,67409,67410,69181,67361,67412,67413,67360,67404,67355,67415,67364,67405,67381,67382,67365,67380,67403,67378,69182,67411,67363,67358,67379,67356,67369,67406,67357,67233,67234,67230,67232};
                ////copy first dictionary to the matrix
                //float[ ] vector = new float[maxIndexDictionary ]; 
                //foreach (int key in d.Keys)
                //{
                //    vector[key-1] = (float)d[key];
                //}

                Preferences.Instance.glm.showDicomOverlayIndices(0, (MWNumericArray)Preferences.Instance.BrainRawValueForPlot, (MWNumericArray)d.Keys.ToArray());
                //Preferences.Instance.glm.showDicomOverlayIndices(0, (MWNumericArray)Preferences.Instance.BrainRawValueForPlot, (MWNumericArray)ar);
            }
            else
            {
                GuiPreferences.Instance.setLog("Plot Failed: no problem");
            }
        }
    }
}
